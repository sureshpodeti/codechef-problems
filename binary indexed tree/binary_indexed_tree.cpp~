#include<iostream>

using namespace std;

class BITree{
  int no_of_nodes;
  int *bi_tree;
public:
  BITree(int);



};


BITree::BITree(int *A, int n){
  no_of_nodes = n;
  bi_tree = new int[no_of_nodes+1];

  // initialize the binary index tree with all 0's initially
  for(int i=1;i<=no_of_nodes;++i)
    bi_tree = 0;

  //update the tree
  for(int i=0;i<n;++i)
    UpdateBITree(A, i, A[i]);

  
}

void BITree::UpdateBITree(int *A, int n){

  int index = 1;

  while(index<=n){
    // first element of the binary index tree
    bi_tree[index] += A[i]l


      //update index value to its parents
      index = index &  (-index);
  }
}
int main(){
  int A[] = {2, 1, 1, 3, 2, 3, 4, 5, 6, 7, 8, 9}; 
  int n = sizeof(freq)/sizeof(freq[0]);

  BITree bi_tree(A, n);


  
  return 0;
}
