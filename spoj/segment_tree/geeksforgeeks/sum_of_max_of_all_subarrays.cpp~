#include<iostream>
#include<cmath>
using namespace std;


class SegmentTree{
  int no_of_nodes;
  pair<int,int> *segment_tree; //first will score the maximum values, and second will store its index

public:
  SegmentTree(int);
  

  

};

SegmentTree::SegmentTree(int *A, int n){
  int height = int(ceil(log2(n)));

  no_of_nodes = 2*int(pow(2, height))-1;

  segment_tree = new pair<int,int>[no_of_nodes];

  //build the segment tree
  Build(0, 0, n-1, A); 

}

int SegmentTree::ComputeMidIndex(int node_left, int node_right){
  return node_left + (node_right - node_left)/2;
}

void Build(int node, int node_left, int node_right, int *A){



}




int main(){
  int A[] = {1, 3, 1, 7};
  int n = sizeof(A)/sizeof(A[0]);

  
  return 0;
}
